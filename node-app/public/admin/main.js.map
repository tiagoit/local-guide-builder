{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/angular-material-components/angular-material-components.module.ts","webpack:///./src/app/angular-material-components/dialog-confirm.component.ts","webpack:///./src/app/angular-material-components/dialog-confirm.html","webpack:///./src/app/angular-material-components/nav/nav.component.html","webpack:///./src/app/angular-material-components/nav/nav.component.scss","webpack:///./src/app/angular-material-components/nav/nav.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/cities/add-city/add-city.component.html","webpack:///./src/app/cities/add-city/add-city.component.scss","webpack:///./src/app/cities/add-city/add-city.component.ts","webpack:///./src/app/cities/city.service.ts","webpack:///./src/app/cities/edit-city/edit-city.component.html","webpack:///./src/app/cities/edit-city/edit-city.component.scss","webpack:///./src/app/cities/edit-city/edit-city.component.ts","webpack:///./src/app/cities/list-cities/list-cities-datasource.ts","webpack:///./src/app/cities/list-cities/list-cities.component.html","webpack:///./src/app/cities/list-cities/list-cities.component.scss","webpack:///./src/app/cities/list-cities/list-cities.component.ts","webpack:///./src/app/events/add-event/add-event.component.html","webpack:///./src/app/events/add-event/add-event.component.scss","webpack:///./src/app/events/add-event/add-event.component.ts","webpack:///./src/app/events/edit-event/edit-event.component.html","webpack:///./src/app/events/edit-event/edit-event.component.scss","webpack:///./src/app/events/edit-event/edit-event.component.ts","webpack:///./src/app/events/event.service.ts","webpack:///./src/app/events/list-events/list-events-datasource.ts","webpack:///./src/app/events/list-events/list-events.component.html","webpack:///./src/app/events/list-events/list-events.component.scss","webpack:///./src/app/events/list-events/list-events.component.ts","webpack:///./src/app/models.ts","webpack:///./src/app/orgs/add-org/add-org.component.html","webpack:///./src/app/orgs/add-org/add-org.component.scss","webpack:///./src/app/orgs/add-org/add-org.component.ts","webpack:///./src/app/orgs/edit-org/edit-org.component.html","webpack:///./src/app/orgs/edit-org/edit-org.component.scss","webpack:///./src/app/orgs/edit-org/edit-org.component.ts","webpack:///./src/app/orgs/list-orgs/list-orgs-datasource.ts","webpack:///./src/app/orgs/list-orgs/list-orgs.component.html","webpack:///./src/app/orgs/list-orgs/list-orgs.component.scss","webpack:///./src/app/orgs/list-orgs/list-orgs.component.ts","webpack:///./src/app/orgs/org.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { \n  MatButtonModule,\n  MatCheckboxModule,\n  MatToolbarModule,\n  MatSidenavModule,\n  MatIconModule,\n  MatListModule,\n  MatTableModule,\n  MatPaginatorModule,\n  MatSortModule,\n  MatCardModule,\n  MatMenuModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatAutocompleteModule,\n  MatDatepickerModule,\n  MatRadioModule,\n  MatSelectModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatGridListModule,\n  MatStepperModule,\n  MatTabsModule,\n  MatExpansionModule,\n  MatButtonToggleModule,\n  MatChipsModule,\n  MatProgressSpinnerModule,\n  MatProgressBarModule,\n  MatDialogModule,\n  MatTooltipModule,\n  MatSnackBarModule,\n  MatNativeDateModule\n} from '@angular/material';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatCardModule,\n    MatMenuModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatDatepickerModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatGridListModule,\n    MatStepperModule,\n    MatTabsModule,\n    MatExpansionModule,\n    MatButtonToggleModule,\n    MatChipsModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatDialogModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    MatNativeDateModule\n  ],\n  exports: [\n    MatButtonModule,\n    MatCheckboxModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatCardModule,\n    MatMenuModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatDatepickerModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatGridListModule,\n    MatStepperModule,\n    MatTabsModule,\n    MatExpansionModule,\n    MatButtonToggleModule,\n    MatChipsModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatDialogModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    MatNativeDateModule\n  ],\n})\nexport class AngularMaterialComponentsModule { }\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nexport interface DialogData {\ntitle: String;\n}\n\n@Component({\n    selector: 'dialog-confirm',\n    templateUrl: 'dialog-confirm.html',\n})\nexport class DialogConfirm {\n    constructor(public dialogRef: MatDialogRef<DialogConfirm>, @Inject(MAT_DIALOG_DATA) public data: DialogData) {}\n\n    onNoClick(): void {\n        this.dialogRef.close();\n    }\n}","module.exports = \"<h1 mat-dialog-title>Confirmação</h1>\\n<div mat-dialog-content>\\n  <p>Confirma a remoção do item:</p>\\n  <p>{{data.name}}</p>\\n</div>\\n<div mat-dialog-actions>\\n  <button mat-button [mat-dialog-close]=\\\"false\\\">Cancelar</button>\\n  <button mat-button [mat-dialog-close]=\\\"true\\\" cdkFocusInitial>Remover</button>\\n</div>\"","module.exports = \"<mat-sidenav-container class=\\\"sidenav-container\\\">\\n  <mat-sidenav #drawer class=\\\"sidenav\\\" fixedInViewport=\\\"true\\\"\\n      [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\"\\n      [mode]=\\\"(isHandset$ | async) ? 'over' : 'side'\\\"\\n      [opened]=\\\"!(isHandset$ | async)\\\">\\n    <!-- TODO: add logo here -->\\n    <mat-toolbar>Menu</mat-toolbar>\\n    <mat-nav-list>\\n      <a mat-list-item routerLink=\\\"/events\\\">Eventos</a>\\n      <a mat-list-item routerLink=\\\"/cities\\\">Cidades</a>\\n      <a mat-list-item routerLink=\\\"/orgs\\\">Organizações</a>\\n    </mat-nav-list>\\n  </mat-sidenav>\\n  <mat-sidenav-content>\\n    <mat-toolbar color=\\\"primary\\\">\\n      <button\\n        type=\\\"button\\\"\\n        aria-label=\\\"Toggle sidenav\\\"\\n        mat-icon-button\\n        (click)=\\\"drawer.toggle()\\\"\\n        *ngIf=\\\"isHandset$ | async\\\">\\n        <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\n      </button>\\n      <!-- TODO: Add logo -->\\n      <span>Sul BA Guia - Admin module</span>\\n    </mat-toolbar>\\n\\n    <!-- Add Content Here -->\\n    <router-outlet></router-outlet>\\n\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\\n\"","module.exports = \".sidenav-container {\\n  height: 100%; }\\n\\n.sidenav {\\n  width: 200px; }\\n\\n.sidenav .mat-toolbar {\\n  background: inherit; }\\n\\n.mat-toolbar.mat-primary {\\n  position: -webkit-sticky;\\n  position: sticky;\\n  top: 0;\\n  z-index: 1; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2ZlcnJlaXJhdGkvcHJvamVjdHMvc3VsYmFndWlhL2FuZ3VsYXItYWRtaW4vc3JjL2FwcC9hbmd1bGFyLW1hdGVyaWFsLWNvbXBvbmVudHMvbmF2L25hdi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQVksRUFDYjs7QUFFRDtFQUNFLGFBQVksRUFDYjs7QUFFRDtFQUNFLG9CQUFtQixFQUNwQjs7QUFFRDtFQUNFLHlCQUFnQjtFQUFoQixpQkFBZ0I7RUFDaEIsT0FBTTtFQUNOLFdBQVUsRUFDWCIsImZpbGUiOiJzcmMvYXBwL2FuZ3VsYXItbWF0ZXJpYWwtY29tcG9uZW50cy9uYXYvbmF2LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNpZGVuYXYtY29udGFpbmVyIHtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG4uc2lkZW5hdiB7XG4gIHdpZHRoOiAyMDBweDtcbn1cblxuLnNpZGVuYXYgLm1hdC10b29sYmFyIHtcbiAgYmFja2dyb3VuZDogaW5oZXJpdDtcbn1cblxuLm1hdC10b29sYmFyLm1hdC1wcmltYXJ5IHtcbiAgcG9zaXRpb246IHN0aWNreTtcbiAgdG9wOiAwO1xuICB6LWluZGV4OiAxO1xufSJdfQ== */\"","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss'],\n})\nexport class NavComponent {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches)\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n\n}\n","import { NgModule } from '@angular/core';\nimport { ModuleWithProviders } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ListEventsComponent } from \"./events/list-events/list-events.component\";\nimport { AddEventComponent } from \"./events/add-event/add-event.component\";\nimport { EditEventComponent } from \"./events/edit-event/edit-event.component\";\n\nimport { ListCitiesComponent } from \"./cities/list-cities/list-cities.component\";\nimport { AddCityComponent } from \"./cities/add-city/add-city.component\";\nimport { EditCityComponent } from \"./cities/edit-city/edit-city.component\";\n\nimport { ListOrgsComponent } from \"./orgs/list-orgs/list-orgs.component\";\nimport { AddOrgComponent } from \"./orgs/add-org/add-org.component\";\nimport { EditOrgComponent } from \"./orgs/edit-org/edit-org.component\";\n\n\nconst routes: Routes = [\n  { path: 'events', component: ListEventsComponent },\n  { path: 'events/add', component: AddEventComponent },\n  { path: 'events/edit/:id', component: EditEventComponent },\n\n  { path: 'cities', component: ListCitiesComponent },\n  { path: 'cities/add', component: AddCityComponent },\n  { path: 'cities/edit/:id', component: EditCityComponent },\n\n  { path: 'orgs', component: ListOrgsComponent },\n  { path: 'orgs/add', component: AddOrgComponent },\n  { path: 'orgs/edit/:id', component: EditOrgComponent }\n];\n\nexport const routing: ModuleWithProviders = RouterModule.forRoot(routes);\n\n@NgModule({ \n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n<app-nav></app-nav>\\n\\n\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\nimport { HotkeysService, Hotkey } from 'angular2-hotkeys';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'admin';\n\n  constructor(private router: Router, private _hotkeysService: HotkeysService) {\n    _hotkeysService.add(new Hotkey('shift+1', (event: KeyboardEvent): boolean => {\n      this.router.navigate([`/events`]);\n      return false;\n    }));\n\n    _hotkeysService.add(new Hotkey('shift+2', (event: KeyboardEvent): boolean => {\n      this.router.navigate([`/cities`]);\n      return false;\n    }));\n\n    _hotkeysService.add(new Hotkey('shift+3', (event: KeyboardEvent): boolean => {\n      this.router.navigate([`/orgs`]); \n      return false;\n    }));\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MAT_DATE_LOCALE } from '@angular/material';\nimport { FileUploadModule } from \"ng2-file-upload\";\n// import { FileSelectDirective } from 'ng2-file-upload';\nimport { HotkeyModule } from 'angular2-hotkeys';\n\nimport { NavComponent } from './angular-material-components/nav/nav.component';\nimport { AngularMaterialComponentsModule } from './angular-material-components/angular-material-components.module';\nimport { AppComponent } from './app.component';\n\nimport { DialogConfirm } from './angular-material-components/dialog-confirm.component';\n\nimport { ListEventsComponent } from './events/list-events/list-events.component';\nimport { AddEventComponent } from './events/add-event/add-event.component';\nimport { EditEventComponent } from './events/edit-event/edit-event.component';\n\nimport { ListCitiesComponent } from './cities/list-cities/list-cities.component';\nimport { AddCityComponent } from './cities/add-city/add-city.component';\nimport { EditCityComponent } from './cities/edit-city/edit-city.component';\n\nimport { ListOrgsComponent } from './orgs/list-orgs/list-orgs.component';\nimport { AddOrgComponent } from './orgs/add-org/add-org.component';\nimport { EditOrgComponent } from './orgs/edit-org/edit-org.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    ListEventsComponent, AddEventComponent, EditEventComponent,\n    ListCitiesComponent, AddCityComponent, EditCityComponent,\n    ListOrgsComponent, AddOrgComponent, EditOrgComponent,\n    DialogConfirm,\n    // FileSelectDirective\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    LayoutModule,\n    FormsModule, ReactiveFormsModule,\n    FileUploadModule,\n    HotkeyModule.forRoot(),\n    AngularMaterialComponentsModule\n  ],\n  providers: [\n    {provide: MAT_DATE_LOCALE, useValue: 'pt-BR'},\n  ],\n  bootstrap: [AppComponent],\n  entryComponents: [DialogConfirm]\n})\nexport class AppModule { }\n","module.exports = \"<form class=\\\"form-container\\\" [formGroup]=\\\"fg\\\"> \\n  <!-- CODE -->\\n  <mat-form-field>\\n    <input #firstInput matInput formControlName=\\\"code\\\" placeholder=\\\"Código\\\" required>\\n  </mat-form-field>\\n\\n  <!-- NAME -->\\n  <mat-form-field>\\n    <input matInput formControlName=\\\"name\\\" placeholder=\\\"Nome\\\" required>\\n  </mat-form-field>\\n\\n  <button mat-raised-button color=\\\"accent\\\" [disabled]=\\\"!fg.valid\\\" (click)=\\\"save()\\\">Salvar</button>\\n</form>\\n\"","module.exports = \".form-container {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  margin-top: 36px; }\\n\\n.form-container > * {\\n  width: 80%; }\\n\\n.form-container form {\\n  margin-bottom: 20px; }\\n\\n.form-container form > * {\\n  margin: 5px 0; }\\n\\n.form-container .mat-radio-button {\\n  margin: 0 5px; }\\n\\nbutton {\\n  margin-top: 16px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2ZlcnJlaXJhdGkvcHJvamVjdHMvc3VsYmFndWlhL2FuZ3VsYXItYWRtaW4vc3JjL2FwcC9jaXRpZXMvYWRkLWNpdHkvYWRkLWNpdHkuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxjQUFhO0VBQ2IsdUJBQXNCO0VBQ3RCLG9CQUFtQjtFQUNuQixpQkFBZ0IsRUFDbkI7O0FBRUQ7RUFDSSxXQUFVLEVBQ2I7O0FBRUQ7RUFDSSxvQkFBbUIsRUFDdEI7O0FBRUQ7RUFDSSxjQUFhLEVBQ2hCOztBQUVEO0VBQ0ksY0FBYSxFQUNoQjs7QUFFRDtFQUNJLGlCQUFnQixFQUNuQiIsImZpbGUiOiJzcmMvYXBwL2NpdGllcy9hZGQtY2l0eS9hZGQtY2l0eS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mb3JtLWNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgbWFyZ2luLXRvcDogMzZweDtcbn1cblxuLmZvcm0tY29udGFpbmVyID4gKiB7XG4gICAgd2lkdGg6IDgwJTtcbn1cblxuLmZvcm0tY29udGFpbmVyIGZvcm0ge1xuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG59XG5cbi5mb3JtLWNvbnRhaW5lciBmb3JtID4gKiB7XG4gICAgbWFyZ2luOiA1cHggMDtcbn1cblxuLmZvcm0tY29udGFpbmVyIC5tYXQtcmFkaW8tYnV0dG9uIHtcbiAgICBtYXJnaW46IDAgNXB4O1xufVxuXG5idXR0b24ge1xuICAgIG1hcmdpbi10b3A6IDE2cHg7XG59Il19 */\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { CityService } from '../city.service';\nimport { Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'app-add-city',\n  templateUrl: './add-city.component.html',\n  styleUrls: ['./add-city.component.scss']\n})\nexport class AddCityComponent implements OnInit {\n  @ViewChild(\"firstInput\") firstInput: ElementRef;\n  fg: FormGroup;\n\n  constructor(fb: FormBuilder, private service: CityService, private router: Router, public snackBar: MatSnackBar) {\n    this.fg = fb.group({\n      code: ['', Validators.required],\n      name: ['', Validators.required]\n    });\n  }\n\n  ngOnInit() {\n    this.firstInput.nativeElement.focus();\n  }\n\n  save() {\n    let data = {};\n    data['code']  = this.fg.controls.code.value;\n    data['name']  = this.fg.controls.name.value;\n    \n    this.service.add(data).subscribe((res) => {\n      this.snackBar.open('Cidade adicionada com sucesso!', null, {duration: 2000});\n      this.router.navigate([`/cities`]);\n    })\n  }\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CityService {\n\n  // TODO: Config environment variables\n  // host = 'http://localhost:8080';\n  host = 'http://sulbaguia.com.br';\n  \n  url = this.host + '/api/cities';\n\n  constructor(private http: HttpClient) { }\n  \n  get() {\n    return this.http.get(this.url);\n  }\n  \n  getById(id) {\n    return this.http.get(`${this.url}/${id}`);\n  }\n  \n  update(data) {\n    return this.http.put(`${this.url}/${data._id}`, data);\n  }\n  \n  add(data) {\n    return this.http.post(this.url, data);\n  }\n  \n  delete(id) {\n    return this.http.delete(`${this.url}/${id}`);\n  }\n}\n","module.exports = \"<form class=\\\"form-container\\\" [formGroup]=\\\"fg\\\"> \\n  <!-- CODE -->\\n  <mat-form-field>\\n    <input matInput formControlName=\\\"code\\\" placeholder=\\\"Código\\\" required>\\n  </mat-form-field>\\n\\n  <!-- NAME -->\\n  <mat-form-field>\\n    <input matInput formControlName=\\\"name\\\" placeholder=\\\"Nome\\\" required>\\n  </mat-form-field>\\n\\n  <button mat-raised-button color=\\\"primary\\\" (click)=\\\"cancel()\\\">Cancelar</button>\\n  <button mat-raised-button color=\\\"accent\\\" [disabled]=\\\"!fg.valid\\\" (click)=\\\"update()\\\">Atualizar</button>\\n</form>\\n  \"","module.exports = \".form-container {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  margin-top: 36px; }\\n\\n.form-container > * {\\n  width: 80%; }\\n\\n.form-container form {\\n  margin-bottom: 20px; }\\n\\n.form-container form > * {\\n  margin: 5px 0; }\\n\\n.form-container .mat-radio-button {\\n  margin: 0 5px; }\\n\\nbutton {\\n  margin-top: 16px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2ZlcnJlaXJhdGkvcHJvamVjdHMvc3VsYmFndWlhL2FuZ3VsYXItYWRtaW4vc3JjL2FwcC9jaXRpZXMvZWRpdC1jaXR5L2VkaXQtY2l0eS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGNBQWE7RUFDYix1QkFBc0I7RUFDdEIsb0JBQW1CO0VBQ25CLGlCQUFnQixFQUNuQjs7QUFFRDtFQUNJLFdBQVUsRUFDYjs7QUFFRDtFQUNJLG9CQUFtQixFQUN0Qjs7QUFFRDtFQUNJLGNBQWEsRUFDaEI7O0FBRUQ7RUFDSSxjQUFhLEVBQ2hCOztBQUVEO0VBQ0ksaUJBQWdCLEVBQ25CIiwiZmlsZSI6InNyYy9hcHAvY2l0aWVzL2VkaXQtY2l0eS9lZGl0LWNpdHkuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZm9ybS1jb250YWluZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIG1hcmdpbi10b3A6IDM2cHg7XG59XG5cbi5mb3JtLWNvbnRhaW5lciA+ICoge1xuICAgIHdpZHRoOiA4MCU7XG59XG5cbi5mb3JtLWNvbnRhaW5lciBmb3JtIHtcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xufVxuXG4uZm9ybS1jb250YWluZXIgZm9ybSA+ICoge1xuICAgIG1hcmdpbjogNXB4IDA7XG59XG5cbi5mb3JtLWNvbnRhaW5lciAubWF0LXJhZGlvLWJ1dHRvbiB7XG4gICAgbWFyZ2luOiAwIDVweDtcbn1cblxuYnV0dG9uIHtcbiAgICBtYXJnaW4tdG9wOiAxNnB4O1xufVxuIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CityService } from \"../city.service\";\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'app-edit-city',\n  templateUrl: './edit-city.component.html',\n  styleUrls: ['./edit-city.component.scss']\n})\nexport class EditCityComponent implements OnInit {\n  city: any;\n  fg: FormGroup;\n\n  constructor(private route: ActivatedRoute, private service: CityService, private fb: FormBuilder, private router: Router, public snackBar: MatSnackBar) {\n    this.fg = fb.group({\n      code: ['', Validators.required],\n      name: ['', Validators.required]\n    });\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe(p => {\n      this.service.getById(p.id).subscribe(city => {\n        this.city = city;\n        this.fillForm(city);\n      })\n    });\n  }\n\n  fillForm(city) {\n    this.fg.controls.code.setValue(city.code);\n    this.fg.controls.name.setValue(city.name);\n  }\n\n  update() {\n    let data = {};\n    data['_id']       = this.city._id;\n    data['code']  = this.fg.controls.code.value;\n    data['name']  = this.fg.controls.name.value;\n\n    this.service.update(data).subscribe((res) => {\n      this.snackBar.open('Cidade atualizada com sucesso!', null, {duration: 2000});\n      this.router.navigate([`/cities`]);\n    });\n  }\n\n  cancel() {\n    this.router.navigate(['/cities']);\n  }\n\n}\n","import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator, MatSort } from '@angular/material';\nimport { map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge } from 'rxjs';\nimport { City } from \"../../models\";\n\n/**\n * Data source for the CitiesTable view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\nexport class ListCitiesDataSource extends DataSource<City> {\n  data: City[] = [];\n\n  constructor(private paginator: MatPaginator, private sort: MatSort, private _data: City[]) {\n    super();\n    this.data = _data;\n  }\n\n  /**\n   * Connect this data source to the table. The table will only update when\n   * the returned stream emits new items.\n   * @returns A stream of the items to be rendered.\n   */\n  connect(): Observable<City[]> {\n    // Combine everything that affects the rendered data into one update\n    // stream for the data-table to consume.\n    const dataMutations = [\n      observableOf(this.data),\n      this.paginator.page,\n      this.sort.sortChange\n    ];\n\n    // Set the paginator's length\n    this.paginator.length = this.data.length;\n\n    return merge(...dataMutations).pipe(map(() => {\n      return this.getPagedData(this.getSortedData([...this.data]));\n    }));\n  }\n\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect() {}\n\n  /**\n   * Paginate the data (client-side). If you're using server-side pagination,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getPagedData(data: City[]) {\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n    return data.splice(startIndex, this.paginator.pageSize);\n  }\n\n  /**\n   * Sort the data (client-side). If you're using server-side sorting,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getSortedData(data: City[]) {\n    if (!this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort.direction === 'asc';\n      switch (this.sort.active) {\n        case 'name': return compare(a.name, b.name, isAsc);\n        case 'code': return compare(a.code, b.code, isAsc);\n        default: return 0;\n      }\n    });\n  }\n}\n\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\nfunction compare(a, b, isAsc) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","module.exports = \"<div class=\\\"mat-elevation-z8\\\">\\n  <table mat-table class=\\\"full-width-table\\\" [dataSource]=\\\"dataSource\\\" matSort aria-label=\\\"Elements\\\">\\n    <!-- code Column -->\\n    <ng-container matColumnDef=\\\"code\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Código</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\">{{row.code}}</td>\\n    </ng-container>\\n\\n    <!-- name Column -->\\n    <ng-container matColumnDef=\\\"name\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Nome</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\">{{row.name}}</td>\\n    </ng-container>\\n\\n    <!-- Actions Column -->  \\n    <ng-container matColumnDef=\\\"actions\\\">\\n      <th mat-header-cell *matHeaderCellDef></th>\\n      <td mat-cell *matCellDef=\\\"let row\\\">\\n        <button mat-icon-button (click)=\\\"edit(row._id)\\\">\\n          <mat-icon aria-label=\\\"Edit\\\">edit</mat-icon>\\n        </button>\\n        <button mat-icon-button (click)=\\\"delete(row._id, row.title)\\\">\\n          <mat-icon aria-label=\\\"Delete\\\">delete</mat-icon>\\n        </button>\\n      </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n  </table>\\n\\n  <mat-paginator #paginator\\n      [length]=\\\"dataSource?.data.length\\\"\\n      [pageIndex]=\\\"0\\\"\\n      [pageSize]=\\\"50\\\"\\n      [pageSizeOptions]=\\\"[25, 50, 100, 250]\\\">\\n  </mat-paginator>\\n</div>\\n\\n<div class=\\\"fab\\\">\\n  <button mat-icon-button (click)=\\\"add()\\\">\\n    <mat-icon aria-label=\\\"Add\\\">add</mat-icon>\\n  </button>\\n</div>\\n\\n\"","module.exports = \".full-width-table {\\n  width: 100%; }\\n\\ndiv.fab {\\n  color: #FFF;\\n  position: fixed;\\n  right: 36px;\\n  top: 12px;\\n  z-index: 2; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2ZlcnJlaXJhdGkvcHJvamVjdHMvc3VsYmFndWlhL2FuZ3VsYXItYWRtaW4vc3JjL2FwcC9jaXRpZXMvbGlzdC1jaXRpZXMvbGlzdC1jaXRpZXMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFXLEVBQ1o7O0FBRUQ7RUFDRSxZQUFXO0VBQ1gsZ0JBQWU7RUFDZixZQUFXO0VBQ1gsVUFBUztFQUNULFdBQVUsRUFDWCIsImZpbGUiOiJzcmMvYXBwL2NpdGllcy9saXN0LWNpdGllcy9saXN0LWNpdGllcy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mdWxsLXdpZHRoLXRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbmRpdi5mYWIge1xuICBjb2xvcjogI0ZGRjtcbiAgcG9zaXRpb246IGZpeGVkO1xuICByaWdodDogMzZweDtcbiAgdG9wOiAxMnB4O1xuICB6LWluZGV4OiAyO1xufSJdfQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator, MatSort, MatDialog, MatTable, MatSnackBar } from '@angular/material';\nimport { ListCitiesDataSource } from './list-cities-datasource';\nimport { CityService } from '../city.service';\nimport { Router } from '@angular/router';\nimport { City } from \"../../models\";\nimport { DialogConfirm } from '../../angular-material-components/dialog-confirm.component';\n\n\n@Component({\n  selector: 'app-list-cities',\n  templateUrl: './list-cities.component.html',\n  styleUrls: ['./list-cities.component.scss'],\n})\nexport class ListCitiesComponent implements OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatTable) table: MatTable<any>;\n  dataSource: ListCitiesDataSource;\n\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = ['code', 'name', 'actions'];\n\n  constructor(private service: CityService, private router: Router, public dialog: MatDialog, public snackBar: MatSnackBar) {}\n\n  ngOnInit() { this.getCities() }\n\n  getCities() {\n    this.service.get().subscribe((data: City[]) => {\n      this.dataSource = new ListCitiesDataSource(this.paginator, this.sort, data);\n    });\n  }\n\n  edit(id) { this.router.navigate([`/cities/edit/${id}`])}\n  add() { this.router.navigate([`/cities/add`])}\n\n  delete(id, title) {\n    const dialogRef = this.dialog.open(DialogConfirm, {width: '320px', data: {title: title}});\n    dialogRef.afterClosed().subscribe(result => {\n      if(result) {\n        this.service.delete(id).subscribe(() => this.getCities());\n        this.snackBar.open('Cidade removida.', null, {duration: 2000});\n      }\n    });\n  }\n\n  // filter(s: string) {\n  //   this.dataSource.filter = s.trim().toLowerCase();\n  // }\n\n}\n","module.exports = \"<form class=\\\"form-container\\\" [formGroup]=\\\"fg\\\"> \\n  <!-- TITLE -->\\n  <mat-form-field>\\n    <input #firstInput matInput formControlName=\\\"title\\\" placeholder=\\\"Título\\\" required>\\n  </mat-form-field>\\n\\n  <!-- ORG -->\\n  <mat-form-field>\\n    <mat-select required formControlName=\\\"org_code\\\">\\n      <mat-option *ngFor=\\\"let org of orgs\\\" [value]=\\\"org.code\\\">{{org.name}}</mat-option>\\n    </mat-select>\\n    <mat-label>Organização</mat-label>\\n  </mat-form-field>\\n\\n  <!-- IMG -->\\n  <mat-form-field>\\n    <input matInput formControlName=\\\"img\\\" placeholder=\\\"Imagem\\\" required>\\n  </mat-form-field>\\n\\n  <!-- START -->\\n  <div class=\\\"start\\\">\\n    <!-- TODO: Disable input -->\\n    <mat-form-field class=\\\"date\\\">\\n      <input matInput formControlName=\\\"start\\\" [matDatepicker]=\\\"startPicker\\\" placeholder=\\\"Data\\\">\\n      <mat-datepicker-toggle matSuffix [for]=\\\"startPicker\\\"></mat-datepicker-toggle>\\n      <mat-datepicker #startPicker></mat-datepicker>\\n    </mat-form-field>\\n    <mat-form-field class=\\\"time\\\">\\n      <mat-select required formControlName=\\\"startTime\\\">\\n        <mat-option *ngFor=\\\"let t of timeOptions\\\" [value]=\\\"t\\\">{{t}}h</mat-option>\\n      </mat-select>\\n      <mat-label>Horário</mat-label>\\n    </mat-form-field>\\n  </div>\\n\\n  <!-- END -->\\n  <!-- <mat-form-field>\\n    <input matInput formControlName=\\\"end\\\" [matDatepicker]=\\\"endPicker\\\" placeholder=\\\"Término\\\">\\n    <mat-datepicker-toggle matSuffix [for]=\\\"endPicker\\\"></mat-datepicker-toggle>\\n    <mat-datepicker #endPicker></mat-datepicker>\\n  </mat-form-field> -->\\n\\n  <mat-checkbox formControlName=\\\"featured\\\">Destaque</mat-checkbox>\\n\\n  <div class=\\\"row images\\\">\\n    <div class=\\\"image-col col-12 col-sm-6 col-md-4 col-lg-3\\\">\\n      <div class=\\\"img-wrapper\\\"><img [src]=\\\"imgPreview[0]\\\" *ngIf=\\\"imgPreview[0]\\\"></div>\\n      <input #file0 type=\\\"file\\\" accept='image/*' (change)=\\\"preview(file0.files, 0)\\\" />\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"file0.click()\\\">Imagem 1</button>\\n    </div>\\n\\n    <div class=\\\"image-col col-12 col-sm-6 col-md-4 col-lg-3\\\">\\n      <div class=\\\"img-wrapper\\\"><img [src]=\\\"imgPreview[1]\\\" *ngIf=\\\"imgPreview[1]\\\"></div>\\n      <input #file1 type=\\\"file\\\" accept='image/*' (change)=\\\"preview(file1.files, 1)\\\" />\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"file1.click()\\\">Imagem 2</button>\\n    </div>\\n\\n    <div class=\\\"image-col col-12 col-sm-6 col-md-4 col-lg-3\\\">\\n      <div class=\\\"img-wrapper\\\"><img [src]=\\\"imgPreview[2]\\\" *ngIf=\\\"imgPreview[2]\\\"></div>\\n      <input #file2 type=\\\"file\\\" accept='image/*' (change)=\\\"preview(file2.files, 2)\\\" />\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"file2.click()\\\">Imagem 3</button>\\n    </div>\\n  \\n    <div class=\\\"image-col col-12 col-sm-6 col-md-4 col-lg-3\\\">\\n      <div class=\\\"img-wrapper\\\"><img [src]=\\\"imgPreview[3]\\\" *ngIf=\\\"imgPreview[3]\\\"></div>\\n      <input #file3 type=\\\"file\\\" accept='image/*' (change)=\\\"preview(file3.files, 3)\\\" />\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"file3.click()\\\">Imagem 4</button>\\n    </div>\\n  </div>\\n\\n  <button mat-raised-button color=\\\"accent\\\" [disabled]=\\\"!fg.valid\\\" (click)=\\\"save()\\\">Salvar</button>\\n\\n\\n\\n  <!-- File input for the file-upload plugin, with special ng2-file-upload directive called ng2FileSelect -->\\n  <input type=\\\"file\\\" name=\\\"photo\\\" ng2FileSelect [uploader]=\\\"uploader\\\" />\\n  <!-- button to trigger the file upload when submitted -->\\n  <button type=\\\"button\\\" class=\\\"btn btn-success btn-s\\\"\\n        (click)=\\\"uploader.uploadAll()\\\" \\n        [disabled]=\\\"!uploader.getNotUploadedItems().length\\\">\\n        Upload with ng-2 file uploader\\n  </button>\\n\\n</form>\\n\"","module.exports = \".form-container {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  margin-top: 36px; }\\n\\n.form-container > * {\\n  width: 80%; }\\n\\n.form-container form {\\n  margin-bottom: 20px; }\\n\\n.form-container form > * {\\n  margin: 5px 0; }\\n\\n.form-container .mat-radio-button {\\n  margin: 0 5px; }\\n\\nbutton {\\n  margin-top: 16px; }\\n\\n.start * {\\n  width: calc(50% - 8px); }\\n\\n.start .date {\\n  padding-right: 4px; }\\n\\n.start .time {\\n  padding-left: 4px;\\n  line-height: 18px; }\\n\\n.start .time mat-select {\\n    width: 100%; }\\n\\ndiv.row.images input {\\n  display: none; }\\n\\ndiv.row.images .image-col {\\n  text-align: center;\\n  margin-bottom: 16px; }\\n\\ndiv.row.images .image-col button {\\n    margin-top: 4px; }\\n\\ndiv.row.images div.img-wrapper {\\n  height: 140px;\\n  width: 140px;\\n  margin-left: auto;\\n  margin-right: auto;\\n  text-align: center;\\n  outline: 1px solid rgba(0, 0, 0, 0.1);\\n  overflow: hidden; }\\n\\ndiv.row.images div.img-wrapper img {\\n    max-width: 140px;\\n    max-height: 150%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2ZlcnJlaXJhdGkvcHJvamVjdHMvc3VsYmFndWlhL2FuZ3VsYXItYWRtaW4vc3JjL2FwcC9ldmVudHMvYWRkLWV2ZW50L2FkZC1ldmVudC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGNBQWE7RUFDYix1QkFBc0I7RUFDdEIsb0JBQW1CO0VBQ25CLGlCQUFnQixFQUNuQjs7QUFFRDtFQUNJLFdBQVUsRUFDYjs7QUFFRDtFQUNJLG9CQUFtQixFQUN0Qjs7QUFFRDtFQUNJLGNBQWEsRUFDaEI7O0FBRUQ7RUFDSSxjQUFhLEVBQ2hCOztBQUVEO0VBQ0ksaUJBQWdCLEVBQ25COztBQUVEO0VBRVEsdUJBQXNCLEVBQ3pCOztBQUhMO0VBS1EsbUJBQWtCLEVBQ3JCOztBQU5MO0VBU1Esa0JBQWlCO0VBQ2pCLGtCQUFpQixFQUlwQjs7QUFkTDtJQVlZLFlBQVcsRUFDZDs7QUFJVDtFQUVRLGNBQWEsRUFDaEI7O0FBSEw7RUFLUSxtQkFBa0I7RUFDbEIsb0JBQW1CLEVBSXRCOztBQVZMO0lBUVksZ0JBQWUsRUFDbEI7O0FBVFQ7RUFZUSxjQUFhO0VBQ2IsYUFBWTtFQUNaLGtCQUFpQjtFQUNqQixtQkFBa0I7RUFDbEIsbUJBQWtCO0VBQ2xCLHNDQUFrQztFQUNsQyxpQkFBZ0IsRUFNbkI7O0FBeEJMO0lBcUJZLGlCQUFnQjtJQUNoQixpQkFBZ0IsRUFDbkIiLCJmaWxlIjoic3JjL2FwcC9ldmVudHMvYWRkLWV2ZW50L2FkZC1ldmVudC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mb3JtLWNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgbWFyZ2luLXRvcDogMzZweDtcbn1cblxuLmZvcm0tY29udGFpbmVyID4gKiB7XG4gICAgd2lkdGg6IDgwJTtcbn1cblxuLmZvcm0tY29udGFpbmVyIGZvcm0ge1xuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG59XG5cbi5mb3JtLWNvbnRhaW5lciBmb3JtID4gKiB7XG4gICAgbWFyZ2luOiA1cHggMDtcbn1cblxuLmZvcm0tY29udGFpbmVyIC5tYXQtcmFkaW8tYnV0dG9uIHtcbiAgICBtYXJnaW46IDAgNXB4O1xufVxuXG5idXR0b24ge1xuICAgIG1hcmdpbi10b3A6IDE2cHg7XG59XG5cbi5zdGFydCB7XG4gICAgKiB7XG4gICAgICAgIHdpZHRoOiBjYWxjKDUwJSAtIDhweCk7XG4gICAgfVxuICAgIC5kYXRlIHtcbiAgICAgICAgcGFkZGluZy1yaWdodDogNHB4O1xuICAgIH1cblxuICAgIC50aW1lIHtcbiAgICAgICAgcGFkZGluZy1sZWZ0OiA0cHg7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxOHB4O1xuICAgICAgICBtYXQtc2VsZWN0IHtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlOyBcbiAgICAgICAgfVxuICAgIH1cbn1cblxuZGl2LnJvdy5pbWFnZXMge1xuICAgIGlucHV0IHtcbiAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG4gICAgLmltYWdlLWNvbCB7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMTZweDtcbiAgICAgICAgYnV0dG9uIHtcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDRweDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBkaXYuaW1nLXdyYXBwZXIge1xuICAgICAgICBoZWlnaHQ6IDE0MHB4O1xuICAgICAgICB3aWR0aDogMTQwcHg7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgb3V0bGluZTogMXB4IHNvbGlkIHJnYmEoMCwwLDAsMC4xKTtcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcblxuICAgICAgICBpbWcge1xuICAgICAgICAgICAgbWF4LXdpZHRoOiAxNDBweDtcbiAgICAgICAgICAgIG1heC1oZWlnaHQ6IDE1MCU7XG4gICAgICAgIH1cbiAgICB9XG59Il19 */\"","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { EventService } from '../event.service';\nimport { Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material';\nimport { FileUploader } from 'ng2-file-upload';\nimport { HttpClient } from '@angular/common/http';\n\nimport { map } from 'rxjs/operators';\nimport { OrgService } from '../../orgs/org.service';\nimport { Org, Event } from '../../models';\n\nconst URL = 'http://localhost:8080/api/upload';\n\n@Component({\n  selector: 'app-add-event',\n  templateUrl: './add-event.component.html',\n  styleUrls: ['./add-event.component.scss']\n})\nexport class AddEventComponent implements OnInit {\n  @ViewChild(\"firstInput\") firstInput: ElementRef;\n\n  fg: FormGroup;\n  timeOptions = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23];\n  imgPreview: any[] = [];\n  files: File[] = [];\n  orgs: Org[];\n  public uploader:FileUploader = new FileUploader({url: URL, itemAlias: 'photo'});\n\n  constructor(fb: FormBuilder, private service: EventService, private router: Router, public snackBar: MatSnackBar,\n    private orgService: OrgService,\n    private http: HttpClient, private el: ElementRef) {\n    this.fg = fb.group({\n      start: ['', Validators.required],\n      startTime: [],\n      org_code: ['', Validators.required],\n      title: ['', Validators.required],\n      img: ['', Validators.required],\n      featured: ['']\n    });\n  }\n\n  ngOnInit() {\n    this.orgService.get().subscribe((orgs: Org[]) => this.orgs = orgs);\n    this.firstInput.nativeElement.focus();\n    \n    this.uploader.onAfterAddingFile = (file)=> { file.withCredentials = false; };\n    this.uploader.onCompleteItem = (item:any, response:any, status:any, headers:any) => {\n      console.log(\"ImageUpload:uploaded:\", item, status, response);\n    };\n    \n  }\n\n  // ngAfterViewInit() {\n  //   console.log('ngAfterViewInit')\n  //   this.firstInput.nativeElement.focus();\n  // }\n\n  save() {\n    let event: Event = new Event();\n\n    let dateWithTime: Date = new Date(this.fg.controls.start.value);\n    dateWithTime.setHours(this.fg.controls.startTime.value);\n    event.start = dateWithTime;\n\n    this.orgs.forEach(org => {\n      if(org.code === this.fg.controls.org_code.value) {\n        event.org_code = org.code;\n        event.org_name = org.name;\n        event.org_city = org.address.city;\n      }\n    });\n\n    event.title     = this.fg.controls.title.value;\n    event.img       = this.fg.controls.img.value;\n    event.featured  = this.fg.controls.featured.value || false;\n    // event.img1      = this.fg.controls.img1.value || false;\n    // event.img2      = this.fg.controls.img2.value || false;\n    // event.img3      = this.fg.controls.img3.value || false;\n    // event.img4      = this.fg.controls.img4.value || false;\n\n    this.service.add(event).subscribe((res) => {\n      this.snackBar.open('Evento adicionado com sucesso!', null, {duration: 2000});\n      this.router.navigate([`/events`]);\n    })\n  }\n \n  preview(files, idx) {\n    if (files.length === 0) return;\n\n    this.files[idx] = files[0];\n\n    let reader = new FileReader();\n    reader.readAsDataURL(files[0]); \n    reader.onload = (_event) => {\n      this.imgPreview[idx] = reader.result;\n    }\n  }\n}\n\n","module.exports = \"<form class=\\\"form-container\\\" [formGroup]=\\\"fg\\\"> \\n  <!-- TITLE -->\\n  <mat-form-field>\\n    <input matInput formControlName=\\\"title\\\" placeholder=\\\"Título\\\" required>\\n  </mat-form-field>\\n\\n  <!-- ORG_CODE -->\\n  <mat-form-field>\\n    <mat-select required formControlName=\\\"org_code\\\">\\n      <mat-option *ngFor=\\\"let org of orgs\\\" [value]=\\\"org.code\\\">{{org.name}}</mat-option>\\n    </mat-select>\\n    <mat-label>Organização</mat-label>\\n  </mat-form-field>\\n  \\n  <!-- IMG -->\\n  <mat-form-field>\\n    <input matInput formControlName=\\\"img\\\" placeholder=\\\"Imagem\\\" required>\\n  </mat-form-field>\\n\\n  <!-- START -->\\n  <div class=\\\"start\\\">\\n    <!-- TODO: Disable input -->\\n    <mat-form-field class=\\\"date\\\">\\n      <input matInput formControlName=\\\"start\\\" [matDatepicker]=\\\"startPicker\\\" placeholder=\\\"Data\\\">\\n      <mat-datepicker-toggle matSuffix [for]=\\\"startPicker\\\"></mat-datepicker-toggle>\\n      <mat-datepicker #startPicker></mat-datepicker>\\n    </mat-form-field>\\n    <mat-form-field class=\\\"time\\\">\\n      <mat-select required formControlName=\\\"startTime\\\">\\n        <mat-option *ngFor=\\\"let t of timeOptions\\\" [value]=\\\"t\\\">{{t}}h</mat-option>\\n      </mat-select>\\n      <mat-label>Horário</mat-label>\\n    </mat-form-field>\\n  </div>\\n\\n  <!-- END -->\\n  <!-- <mat-form-field>\\n    <input matInput formControlName=\\\"end\\\" [matDatepicker]=\\\"endPicker\\\" placeholder=\\\"Término\\\">\\n    <mat-datepicker-toggle matSuffix [for]=\\\"endPicker\\\"></mat-datepicker-toggle>\\n    <mat-datepicker #endPicker></mat-datepicker>\\n  </mat-form-field> -->\\n\\n  <mat-checkbox formControlName=\\\"featured\\\">Destaque</mat-checkbox>\\n\\n  <button mat-raised-button color=\\\"primary\\\" (click)=\\\"cancel()\\\">Cancelar</button>\\n  <button mat-raised-button color=\\\"accent\\\" [disabled]=\\\"!fg.valid\\\" (click)=\\\"update()\\\">Atualizar</button>\\n\\n</form>\\n  \"","module.exports = \".form-container {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  margin-top: 36px; }\\n\\n.form-container > * {\\n  width: 80%; }\\n\\n.form-container form {\\n  margin-bottom: 20px; }\\n\\n.form-container form > * {\\n  margin: 5px 0; }\\n\\n.form-container .mat-radio-button {\\n  margin: 0 5px; }\\n\\nbutton {\\n  margin-top: 16px; }\\n\\n.start * {\\n  width: calc(50% - 8px); }\\n\\n.start .date {\\n  padding-right: 4px; }\\n\\n.start .time {\\n  padding-left: 4px;\\n  line-height: 18px; }\\n\\n.start .time mat-select {\\n    width: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2ZlcnJlaXJhdGkvcHJvamVjdHMvc3VsYmFndWlhL2FuZ3VsYXItYWRtaW4vc3JjL2FwcC9ldmVudHMvZWRpdC1ldmVudC9lZGl0LWV2ZW50LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksY0FBYTtFQUNiLHVCQUFzQjtFQUN0QixvQkFBbUI7RUFDbkIsaUJBQWdCLEVBQ25COztBQUVEO0VBQ0ksV0FBVSxFQUNiOztBQUVEO0VBQ0ksb0JBQW1CLEVBQ3RCOztBQUVEO0VBQ0ksY0FBYSxFQUNoQjs7QUFFRDtFQUNJLGNBQWEsRUFDaEI7O0FBRUQ7RUFDSSxpQkFBZ0IsRUFDbkI7O0FBRUQ7RUFFUSx1QkFBc0IsRUFDekI7O0FBSEw7RUFLUSxtQkFBa0IsRUFDckI7O0FBTkw7RUFTUSxrQkFBaUI7RUFDakIsa0JBQWlCLEVBSXBCOztBQWRMO0lBWVksWUFBVyxFQUNkIiwiZmlsZSI6InNyYy9hcHAvZXZlbnRzL2VkaXQtZXZlbnQvZWRpdC1ldmVudC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mb3JtLWNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgbWFyZ2luLXRvcDogMzZweDtcbn1cblxuLmZvcm0tY29udGFpbmVyID4gKiB7XG4gICAgd2lkdGg6IDgwJTtcbn1cblxuLmZvcm0tY29udGFpbmVyIGZvcm0ge1xuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG59XG5cbi5mb3JtLWNvbnRhaW5lciBmb3JtID4gKiB7XG4gICAgbWFyZ2luOiA1cHggMDtcbn1cblxuLmZvcm0tY29udGFpbmVyIC5tYXQtcmFkaW8tYnV0dG9uIHtcbiAgICBtYXJnaW46IDAgNXB4O1xufVxuXG5idXR0b24ge1xuICAgIG1hcmdpbi10b3A6IDE2cHg7XG59XG5cbi5zdGFydCB7XG4gICAgKiB7XG4gICAgICAgIHdpZHRoOiBjYWxjKDUwJSAtIDhweCk7XG4gICAgfVxuICAgIC5kYXRlIHtcbiAgICAgICAgcGFkZGluZy1yaWdodDogNHB4O1xuICAgIH1cblxuICAgIC50aW1lIHtcbiAgICAgICAgcGFkZGluZy1sZWZ0OiA0cHg7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxOHB4O1xuICAgICAgICBtYXQtc2VsZWN0IHtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlOyBcbiAgICAgICAgfVxuICAgIH1cbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { EventService } from \"../event.service\";\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material';\nimport { Event, Org } from '../../models';\nimport { OrgService } from '../../orgs/org.service';\n\n@Component({\n  selector: 'app-edit-event',\n  templateUrl: './edit-event.component.html',\n  styleUrls: ['./edit-event.component.scss']\n})\nexport class EditEventComponent implements OnInit {\n  event: any;\n  fg: FormGroup;\n  timeOptions = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23];\n  orgs: Org[];\n\n  constructor(private route: ActivatedRoute, private service: EventService, private fb: FormBuilder, private router: Router, public snackBar: MatSnackBar, private orgService: OrgService) {\n    this.fg = fb.group({\n      start: ['', Validators.required],\n      startTime: [],\n      org_code: ['', Validators.required],\n      title: ['', Validators.required],\n      img: ['', Validators.required],\n      featured: ['']\n    });\n  }\n\n  ngOnInit() {\n    this.orgService.get().subscribe((orgs: Org[]) => this.orgs = orgs);\n\n    this.route.params.subscribe(p => {\n      this.service.getById(p.id).subscribe(event => {\n        this.event = event;\n        this.fillForm(event);\n      })\n    });\n  }\n\n  fillForm(event) {\n    this.fg.controls.start.setValue(event.start);\n    this.fg.controls.startTime.setValue(new Date(event.start).getUTCHours());\n    this.fg.controls.org_code.setValue(event.org_code);\n    this.fg.controls.title.setValue(event.title);\n    this.fg.controls.img.setValue(event.img);\n    this.fg.controls.featured.setValue(event.featured);\n  }\n\n  update() {\n    let event: Event = new Event();\n\n    let dateWithTime: Date = new Date(this.fg.controls.start.value);\n    dateWithTime.setHours(this.fg.controls.startTime.value);\n    event.start     = dateWithTime;\n\n    this.orgs.forEach(org => {\n      if(org.code === this.fg.controls.org_code.value) {\n        event.org_code = org.code;\n        event.org_name = org.name;\n        event.org_city = org.address.city;\n      }\n    });\n    \n    event._id       = this.event._id;\n    event.title     = this.fg.controls.title.value;\n    event.img       = this.fg.controls.img.value;\n    event.featured  = this.fg.controls.featured.value;\n\n    this.service.update(event).subscribe((res) => {\n      this.snackBar.open('Evento atualizado com sucesso!', null, {duration: 2000});\n      this.router.navigate([`/events`]);\n    });\n  }\n\n  cancel() {\n    this.router.navigate(['/events']);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventService {\n\n  // TODO: Config environment variables\n  // host = 'http://localhost:8080';\n  host = 'http://sulbaguia.com.br';\n  url = this.host + '/api/events';\n\n  constructor(private http: HttpClient) { }\n  \n  get() {\n    return this.http.get(this.url);\n  }\n  \n  getById(id) {\n    return this.http.get(`${this.url}/${id}`);\n  }\n  \n  update(data) {\n    return this.http.put(`${this.url}/${data._id}`, data);\n  }\n  \n  add(data) {\n    return this.http.post(this.url, data);\n  }\n  \n  delete(id) {\n    return this.http.delete(`${this.url}/${id}`);\n  }\n}\n","import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator, MatSort } from '@angular/material';\nimport { map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge } from 'rxjs';\nimport { Event } from \"../../models\";\n\n/**\n * Data source for the EventsTable view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\nexport class ListEventsDataSource extends DataSource<Event> {\n  data: Event[] = [];\n\n  constructor(private paginator: MatPaginator, private sort: MatSort, private _data: Event[]) {\n    super();\n    this.data = _data;\n  }\n\n  /**\n   * Connect this data source to the table. The table will only update when\n   * the returned stream emits new items.\n   * @returns A stream of the items to be rendered.\n   */\n  connect(): Observable<Event[]> {\n    // Combine everything that affects the rendered data into one update\n    // stream for the data-table to consume.\n    const dataMutations = [\n      observableOf(this.data),\n      this.paginator.page,\n      this.sort.sortChange\n    ];\n\n    // Set the paginator's length\n    this.paginator.length = this.data.length;\n\n    return merge(...dataMutations).pipe(map(() => {\n      return this.getPagedData(this.getSortedData([...this.data]));\n    }));\n  }\n\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect() {}\n\n  /**\n   * Paginate the data (client-side). If you're using server-side pagination,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getPagedData(data: Event[]) {\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n    return data.splice(startIndex, this.paginator.pageSize);\n  }\n\n  /**\n   * Sort the data (client-side). If you're using server-side sorting,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getSortedData(data: Event[]) {\n    if (!this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort.direction === 'asc';\n      switch (this.sort.active) {\n        case 'start': return compare(a.start, b.start, isAsc);\n        case 'org_name': return compare(a.org_name, b.org_name, isAsc);\n        case 'org_city': return compare(a.org_city, b.org_city, isAsc);\n        case 'title': return compare(a.title, b.title, isAsc);\n        default: return 0;\n      }\n    });\n  }\n}\n\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\nfunction compare(a, b, isAsc) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","module.exports = \"<div class=\\\"mat-elevation-z8\\\">\\n  <table mat-table class=\\\"full-width-table\\\" [dataSource]=\\\"dataSource\\\" matSort aria-label=\\\"Elements\\\">\\n    <!-- start Column -->\\n    <ng-container matColumnDef=\\\"start\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Data</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\">{{row.start | date:  'dd/MM - H\\\\'h\\\\''}}</td>\\n    </ng-container>\\n\\n    <!-- org_name Column -->\\n    <ng-container matColumnDef=\\\"org_name\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Local</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\">{{row.org_name}}</td>\\n    </ng-container>\\n\\n    <!-- org_city Column -->\\n    <ng-container matColumnDef=\\\"org_city\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Cidade</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\">{{row.org_city}}</td>\\n    </ng-container>\\n\\n    <!-- title Column -->\\n    <ng-container matColumnDef=\\\"title\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Título</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\">{{row.title}}</td>\\n    </ng-container>\\n\\n    <!-- Actions Column -->  \\n    <ng-container matColumnDef=\\\"actions\\\">\\n      <th mat-header-cell *matHeaderCellDef></th>\\n      <td mat-cell *matCellDef=\\\"let row\\\">\\n        <button mat-icon-button (click)=\\\"edit(row._id)\\\">\\n          <mat-icon aria-label=\\\"Edit\\\">edit</mat-icon>\\n        </button>\\n        <button mat-icon-button (click)=\\\"delete(row._id, row.title)\\\">\\n          <mat-icon aria-label=\\\"Delete\\\">delete</mat-icon>\\n        </button>\\n      </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n  </table>\\n\\n  <mat-paginator #paginator\\n      [length]=\\\"dataSource?.data.length\\\"\\n      [pageIndex]=\\\"0\\\"\\n      [pageSize]=\\\"50\\\"\\n      [pageSizeOptions]=\\\"[25, 50, 100, 250]\\\">\\n  </mat-paginator>\\n</div>\\n\\n<div class=\\\"fab\\\">\\n  <button mat-icon-button (click)=\\\"add()\\\">\\n    <mat-icon aria-label=\\\"Add\\\">add</mat-icon>\\n  </button>\\n</div>\\n\\n\"","module.exports = \".full-width-table {\\n  width: 100%; }\\n\\ndiv.fab {\\n  color: #FFF;\\n  position: fixed;\\n  right: 36px;\\n  top: 12px;\\n  z-index: 2; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2ZlcnJlaXJhdGkvcHJvamVjdHMvc3VsYmFndWlhL2FuZ3VsYXItYWRtaW4vc3JjL2FwcC9ldmVudHMvbGlzdC1ldmVudHMvbGlzdC1ldmVudHMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFXLEVBQ1o7O0FBRUQ7RUFDRSxZQUFXO0VBQ1gsZ0JBQWU7RUFDZixZQUFXO0VBQ1gsVUFBUztFQUNULFdBQVUsRUFDWCIsImZpbGUiOiJzcmMvYXBwL2V2ZW50cy9saXN0LWV2ZW50cy9saXN0LWV2ZW50cy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mdWxsLXdpZHRoLXRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbmRpdi5mYWIge1xuICBjb2xvcjogI0ZGRjtcbiAgcG9zaXRpb246IGZpeGVkO1xuICByaWdodDogMzZweDtcbiAgdG9wOiAxMnB4O1xuICB6LWluZGV4OiAyO1xufSJdfQ== */\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { MatPaginator, MatSort, MatDialog, MatTable, MatSnackBar } from '@angular/material';\nimport { ListEventsDataSource } from './list-events-datasource';\nimport { EventService } from '../event.service';\nimport { Router } from '@angular/router';\nimport { Event } from \"../../models\";\nimport { DialogConfirm } from '../../angular-material-components/dialog-confirm.component';\n\n@Component({\n  selector: 'app-list-events',\n  templateUrl: './list-events.component.html',\n  styleUrls: ['./list-events.component.scss'],\n})\nexport class ListEventsComponent implements OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatTable) table: MatTable<any>;\n  dataSource: ListEventsDataSource;\n  \n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = ['start', 'org_name', 'org_city', 'title', 'actions'];\n\n  constructor(private service: EventService, private router: Router, public dialog: MatDialog, public snackBar: MatSnackBar) {}\n\n  ngOnInit() { this.getEvents() }\n\n\n\n  getEvents() {\n    this.service.get().subscribe((data: Event[]) => {\n      this.dataSource = new ListEventsDataSource(this.paginator, this.sort, data);\n    });\n  }\n\n  edit(id) { this.router.navigate([`/events/edit/${id}`])}\n  add() { this.router.navigate([`/events/add`])}\n\n  delete(id, title) {\n    const dialogRef = this.dialog.open(DialogConfirm, {width: '320px', data: {title: title}});\n    dialogRef.afterClosed().subscribe(result => {\n      if(result) {\n        this.service.delete(id).subscribe(() => this.getEvents());\n        this.snackBar.open('Evento removido.', null, {duration: 2000});\n      }\n    });\n  }\n\n  // filter(s: string) {\n  //   this.dataSource.filter = s.trim().toLowerCase();\n  // }\n\n}","export class Event {\n    _id: String;\n    start: Date;\n    org_code: String;\n    org_name: String;\n    org_city: String;\n    org_id: String;\n    title: string;\n    img: String;\n    featured: Boolean;\n}\n\nexport class City {\n    _id: String;\n    code: String;\n    name: String;\n}\n\nexport class Org {\n    _id: String;\n    code: String;\n    name: String;\n    address: Address;\n    contact: Contact;\n    mobile: String;\n    land: String;\n    email: String;\n    notes: String;\n    status: Boolean;\n\n    constructor() {\n        this.address = new Address();\n        this.contact = new Contact();\n    }\n}\n\nclass Address {\n    state: String;\n    city: String;\n    neighborhood: String;\n    street: String;\n    number: String;\n    complement: String;\n    zip_code: String;\n}\n\nclass Contact {\n    name: String;\n    email: String;\n    mobile: String;\n    role: String;\n    notes: String;\n}","module.exports = \"<form class=\\\"form-container\\\" [formGroup]=\\\"fg\\\"> \\n  <h3>Organização</h3>\\n  <!-- CODE -->\\n  <mat-form-field>\\n    <input #firstInput matInput formControlName=\\\"code\\\" placeholder=\\\"Código\\\" required>\\n  </mat-form-field>\\n\\n  <!-- NAME -->\\n  <mat-form-field>\\n    <input matInput formControlName=\\\"name\\\" placeholder=\\\"Nome\\\" required>\\n  </mat-form-field>\\n\\n  <!-- EMAIL -->\\n  <mat-form-field>\\n    <input matInput formControlName=\\\"email\\\" placeholder=\\\"Email\\\">\\n  </mat-form-field>\\n\\n  <!-- MOBILE -->\\n  <mat-form-field>\\n    <input matInput formControlName=\\\"mobile\\\" placeholder=\\\"Celular\\\">\\n  </mat-form-field>\\n\\n  <!-- LAND -->\\n  <mat-form-field>\\n    <input matInput formControlName=\\\"land\\\" placeholder=\\\"Fixo\\\">\\n  </mat-form-field>\\n\\n  <!-- NOTES -->\\n  <mat-form-field>\\n    <input matInput formControlName=\\\"notes\\\" placeholder=\\\"Notas\\\">\\n  </mat-form-field>\\n\\n  <!-- STATUS -->\\n  <mat-checkbox formControlName=\\\"status\\\">Ativo</mat-checkbox>\\n\\n\\n  <!-- \\n    ###################### ADDRESS ########################\\n   -->\\n  <!-- CITY -->\\n  <h3>Endereço</h3>\\n  <mat-form-field>\\n    <mat-select required formControlName=\\\"city\\\">\\n      <mat-option *ngFor=\\\"let city of cities\\\" [value]=\\\"city.name\\\">{{city.name}}</mat-option>\\n    </mat-select>\\n    <mat-label>Cidade</mat-label>\\n  </mat-form-field>\\n\\n  <!-- NEIGHBORHOOD -->\\n  <mat-form-field>\\n    <input matInput formControlName=\\\"neighborhood\\\" placeholder=\\\"Bairro\\\">\\n  </mat-form-field>\\n\\n  <!-- NUMBER -->\\n  <mat-form-field>\\n    <input matInput formControlName=\\\"number\\\" placeholder=\\\"Número\\\">\\n  </mat-form-field>\\n\\n  <!-- COMPLEMENT -->\\n  <mat-form-field>\\n    <input matInput formControlName=\\\"complement\\\" placeholder=\\\"Complemento\\\">\\n  </mat-form-field>\\n\\n  <!-- ZIP_CODE -->\\n  <mat-form-field>\\n    <input matInput formControlName=\\\"zip_code\\\" placeholder=\\\"Código Postal\\\">\\n  </mat-form-field>\\n  \\n  <!-- \\n    ###################### CONTACT ########################\\n   -->\\n  <h3>Contato</h3>\\n  <!-- CONTACT_NAME -->\\n  <mat-form-field>\\n    <input matInput formControlName=\\\"contact_name\\\" placeholder=\\\"Nome\\\">\\n  </mat-form-field>\\n\\n  <!-- CONTACT_EMAIL -->\\n  <mat-form-field>\\n    <input matInput formControlName=\\\"contact_email\\\" placeholder=\\\"Email\\\">\\n  </mat-form-field>\\n\\n  <!-- CONTACT_MOBILE -->\\n  <mat-form-field>\\n    <input matInput formControlName=\\\"contact_mobile\\\" placeholder=\\\"Celular\\\">\\n  </mat-form-field>\\n\\n  <!-- CONTACT_ROLE -->\\n  <mat-form-field>\\n    <input matInput formControlName=\\\"contact_role\\\" placeholder=\\\"Papel\\\">\\n  </mat-form-field>\\n\\n  <!-- CONTACT_NOTES -->\\n  <mat-form-field>\\n    <input matInput formControlName=\\\"contact_notes\\\" placeholder=\\\"Notas\\\">\\n  </mat-form-field>\\n\\n  <button mat-raised-button color=\\\"accent\\\" [disabled]=\\\"!fg.valid\\\" (click)=\\\"save()\\\">Salvar</button>\\n</form>\\n\"","module.exports = \".form-container {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  margin-top: 12px; }\\n\\n.form-container > * {\\n  width: 80%; }\\n\\n.form-container form {\\n  margin-bottom: 20px; }\\n\\n.form-container form > * {\\n  margin: 5px 0; }\\n\\n.form-container .mat-radio-button {\\n  margin: 0 5px; }\\n\\nbutton {\\n  margin-top: 16px;\\n  margin-bottom: 36px; }\\n\\nh3 {\\n  color: rgba(0, 0, 0, 0.75);\\n  margin-top: 16px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2ZlcnJlaXJhdGkvcHJvamVjdHMvc3VsYmFndWlhL2FuZ3VsYXItYWRtaW4vc3JjL2FwcC9vcmdzL2FkZC1vcmcvYWRkLW9yZy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGNBQWE7RUFDYix1QkFBc0I7RUFDdEIsb0JBQW1CO0VBQ25CLGlCQUFnQixFQUNuQjs7QUFFRDtFQUNJLFdBQVUsRUFDYjs7QUFFRDtFQUNJLG9CQUFtQixFQUN0Qjs7QUFFRDtFQUNJLGNBQWEsRUFDaEI7O0FBRUQ7RUFDSSxjQUFhLEVBQ2hCOztBQUVEO0VBQ0ksaUJBQWdCO0VBQ2hCLG9CQUFtQixFQUN0Qjs7QUFFRDtFQUNJLDJCQUF1QjtFQUN2QixpQkFBZ0IsRUFDbkIiLCJmaWxlIjoic3JjL2FwcC9vcmdzL2FkZC1vcmcvYWRkLW9yZy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mb3JtLWNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgbWFyZ2luLXRvcDogMTJweDtcbn1cblxuLmZvcm0tY29udGFpbmVyID4gKiB7XG4gICAgd2lkdGg6IDgwJTtcbn1cblxuLmZvcm0tY29udGFpbmVyIGZvcm0ge1xuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG59XG5cbi5mb3JtLWNvbnRhaW5lciBmb3JtID4gKiB7XG4gICAgbWFyZ2luOiA1cHggMDtcbn1cblxuLmZvcm0tY29udGFpbmVyIC5tYXQtcmFkaW8tYnV0dG9uIHtcbiAgICBtYXJnaW46IDAgNXB4O1xufVxuXG5idXR0b24ge1xuICAgIG1hcmdpbi10b3A6IDE2cHg7XG4gICAgbWFyZ2luLWJvdHRvbTogMzZweDtcbn1cblxuaDMge1xuICAgIGNvbG9yOiByZ2JhKDAsMCwwLDAuNzUpO1xuICAgIG1hcmdpbi10b3A6IDE2cHg7XG59Il19 */\"","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { OrgService } from '../org.service';\nimport { Router } from '@angular/router';\nimport { MatSnackBar, DateAdapter } from '@angular/material';\nimport { Org, City } from \"../../models\";\nimport { CityService } from '../../cities/city.service';\n\n@Component({\n  selector: 'app-add-org',\n  templateUrl: './add-org.component.html',\n  styleUrls: ['./add-org.component.scss']\n})\nexport class AddOrgComponent implements OnInit {\n  fg: FormGroup;\n  cities: City[];\n  @ViewChild(\"firstInput\") firstInput: ElementRef;\n\n  constructor(fb: FormBuilder, private service: OrgService, private router: Router, public snackBar: MatSnackBar, private cityService: CityService) {\n    this.fg = fb.group({\n      code: ['', Validators.required],\n      name: ['', Validators.required],\n      mobile: [''],\n      land: [''],\n      email: [''],\n      notes: [''],\n      status: [''],\n\n      city: ['', Validators.required],\n      neighborhood: [''],\n      street: [''],\n      number: [''],\n      complement: [''],\n      zip_code: [''],\n    \n      contact_name: [''],\n      contact_email: [''],\n      contact_mobile: [''],\n      contact_role: [''],\n      contact_notes: ['']\n    });\n  }\n\n  ngOnInit() { \n    this.cityService.get().subscribe((cities: City[]) => this.cities = cities);\n    this.firstInput.nativeElement.focus();\n  }\n\n  save() {\n    let org: Org = new Org();\n    org.code = this.fg.controls.code.value;\n    org.name = this.fg.controls.name.value;\n    org.mobile = this.fg.controls.mobile.value;\n    org.land = this.fg.controls.land.value;\n    org.email = this.fg.controls.email.value;\n    org.notes = this.fg.controls.notes.value;\n    org.status = this.fg.controls.status.value ? true : false;\n\n    org.address.state = 'BA';\n    org.address.city = this.fg.controls.city.value;\n    org.address.neighborhood = this.fg.controls.neighborhood.value;\n    org.address.street = this.fg.controls.street.value;\n    org.address.number = this.fg.controls.number.value;\n    org.address.complement = this.fg.controls.complement.value;\n    org.address.zip_code = this.fg.controls.zip_code.value;\n  \n    org.contact.name = this.fg.controls.contact_name.value;\n    org.contact.email = this.fg.controls.contact_email.value;\n    org.contact.mobile = this.fg.controls.contact_mobile.value;\n    org.contact.role = this.fg.controls.contact_role.value;\n    org.contact.notes = this.fg.controls.contact_notes.value;\n    \n    this.service.add(org).subscribe((res) => {\n      this.snackBar.open('Organização adicionada com sucesso!', null, {duration: 2000});\n      this.router.navigate([`/orgs`]);\n    })\n  }\n}\n\n","module.exports = \"<form class=\\\"form-container\\\" [formGroup]=\\\"fg\\\"> \\n    <h3>Organização</h3>\\n    <!-- CODE -->\\n    <mat-form-field>\\n      <input matInput formControlName=\\\"code\\\" placeholder=\\\"Código\\\" required>\\n    </mat-form-field>\\n  \\n    <!-- NAME -->\\n    <mat-form-field>\\n      <input matInput formControlName=\\\"name\\\" placeholder=\\\"Nome\\\" required>\\n    </mat-form-field>\\n  \\n    <!-- EMAIL -->\\n    <mat-form-field>\\n      <input matInput formControlName=\\\"email\\\" placeholder=\\\"Email\\\">\\n    </mat-form-field>\\n  \\n    <!-- MOBILE -->\\n    <mat-form-field>\\n      <input matInput formControlName=\\\"mobile\\\" placeholder=\\\"Celular\\\">\\n    </mat-form-field>\\n  \\n    <!-- LAND -->\\n    <mat-form-field>\\n      <input matInput formControlName=\\\"land\\\" placeholder=\\\"Fixo\\\">\\n    </mat-form-field>\\n  \\n    <!-- NOTES -->\\n    <mat-form-field>\\n      <input matInput formControlName=\\\"notes\\\" placeholder=\\\"Notas\\\">\\n    </mat-form-field>\\n  \\n    <!-- STATUS -->\\n    <mat-checkbox formControlName=\\\"status\\\">Ativo</mat-checkbox>\\n  \\n  \\n    <!-- \\n      ###################### ADDRESS ########################\\n     -->\\n    <h3>Endereço</h3>\\n    <!-- CITY -->\\n    <mat-form-field>\\n      <mat-select required formControlName=\\\"city\\\">\\n        <mat-option *ngFor=\\\"let city of cities\\\" [value]=\\\"city.name\\\">{{city.name}}</mat-option>\\n      </mat-select>\\n      <mat-label>Cidade</mat-label>\\n    </mat-form-field>\\n  \\n    <!-- NEIGHBORHOOD -->\\n    <mat-form-field>\\n      <input matInput formControlName=\\\"neighborhood\\\" placeholder=\\\"Bairro\\\">\\n    </mat-form-field>\\n  \\n    <!-- NUMBER -->\\n    <mat-form-field>\\n      <input matInput formControlName=\\\"number\\\" placeholder=\\\"Número\\\">\\n    </mat-form-field>\\n  \\n    <!-- COMPLEMENT -->\\n    <mat-form-field>\\n      <input matInput formControlName=\\\"complement\\\" placeholder=\\\"Complemento\\\">\\n    </mat-form-field>\\n  \\n    <!-- ZIP_CODE -->\\n    <mat-form-field>\\n      <input matInput formControlName=\\\"zip_code\\\" placeholder=\\\"Código Postal\\\">\\n    </mat-form-field>\\n    \\n    <!-- \\n      ###################### CONTACT ########################\\n     -->\\n    <h3>Contato</h3>\\n    <!-- CONTACT_NAME -->\\n    <mat-form-field>\\n      <input matInput formControlName=\\\"contact_name\\\" placeholder=\\\"Nome do contato\\\">\\n    </mat-form-field>\\n  \\n    <!-- CONTACT_EMAIL -->\\n    <mat-form-field>\\n      <input matInput formControlName=\\\"contact_email\\\" placeholder=\\\"Email do contato\\\">\\n    </mat-form-field>\\n  \\n    <!-- CONTACT_MOBILE -->\\n    <mat-form-field>\\n      <input matInput formControlName=\\\"contact_mobile\\\" placeholder=\\\"Celular do contato\\\">\\n    </mat-form-field>\\n  \\n    <!-- CONTACT_ROLE -->\\n    <mat-form-field>\\n      <input matInput formControlName=\\\"contact_role\\\" placeholder=\\\"Papel do contato\\\">\\n    </mat-form-field>\\n  \\n    <!-- CONTACT_NOTES -->\\n    <mat-form-field>\\n      <input matInput formControlName=\\\"contact_notes\\\" placeholder=\\\"Notas do contato\\\">\\n    </mat-form-field>\\n  \\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"cancel()\\\">Cancelar</button>\\n    <button mat-raised-button class=\\\"last\\\" color=\\\"accent\\\" [disabled]=\\\"!fg.valid\\\" (click)=\\\"update()\\\">Atualizar</button>\\n  \\n  </form>\\n  \"","module.exports = \".form-container {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  margin-top: 12px; }\\n\\n.form-container > * {\\n  width: 80%; }\\n\\n.form-container form {\\n  margin-bottom: 20px; }\\n\\n.form-container form > * {\\n  margin: 5px 0; }\\n\\n.form-container .mat-radio-button {\\n  margin: 0 5px; }\\n\\nbutton {\\n  margin-top: 16px; }\\n\\nbutton.last {\\n    margin-bottom: 36px; }\\n\\nh3 {\\n  margin-top: 12px;\\n  color: rgba(0, 0, 0, 0.75); }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2ZlcnJlaXJhdGkvcHJvamVjdHMvc3VsYmFndWlhL2FuZ3VsYXItYWRtaW4vc3JjL2FwcC9vcmdzL2VkaXQtb3JnL2VkaXQtb3JnLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksY0FBYTtFQUNiLHVCQUFzQjtFQUN0QixvQkFBbUI7RUFDbkIsaUJBQWdCLEVBQ25COztBQUVEO0VBQ0ksV0FBVSxFQUNiOztBQUVEO0VBQ0ksb0JBQW1CLEVBQ3RCOztBQUVEO0VBQ0ksY0FBYSxFQUNoQjs7QUFFRDtFQUNJLGNBQWEsRUFDaEI7O0FBRUQ7RUFDSSxpQkFBZ0IsRUFJbkI7O0FBTEQ7SUFHUSxvQkFBbUIsRUFDdEI7O0FBR0w7RUFDSSxpQkFBZ0I7RUFDaEIsMkJBQXVCLEVBQzFCIiwiZmlsZSI6InNyYy9hcHAvb3Jncy9lZGl0LW9yZy9lZGl0LW9yZy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mb3JtLWNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgbWFyZ2luLXRvcDogMTJweDtcbn1cblxuLmZvcm0tY29udGFpbmVyID4gKiB7XG4gICAgd2lkdGg6IDgwJTtcbn1cblxuLmZvcm0tY29udGFpbmVyIGZvcm0ge1xuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG59XG5cbi5mb3JtLWNvbnRhaW5lciBmb3JtID4gKiB7XG4gICAgbWFyZ2luOiA1cHggMDtcbn1cblxuLmZvcm0tY29udGFpbmVyIC5tYXQtcmFkaW8tYnV0dG9uIHtcbiAgICBtYXJnaW46IDAgNXB4O1xufVxuXG5idXR0b24ge1xuICAgIG1hcmdpbi10b3A6IDE2cHg7XG4gICAgJi5sYXN0IHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMzZweDtcbiAgICB9XG59XG5cbmgzIHtcbiAgICBtYXJnaW4tdG9wOiAxMnB4O1xuICAgIGNvbG9yOiByZ2JhKDAsMCwwLDAuNzUpO1xufVxuIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { OrgService } from \"../org.service\";\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material';\nimport { City, Org } from '../../models';\nimport { CityService } from '../../cities/city.service';\n\n@Component({\n  selector: 'app-edit-org',\n  templateUrl: './edit-org.component.html',\n  styleUrls: ['./edit-org.component.scss']\n})\nexport class EditOrgComponent implements OnInit {\n  org: any;\n  fg: FormGroup;\n  cities: City[];\n\n  constructor(private route: ActivatedRoute, private service: OrgService, private fb: FormBuilder, private router: Router, public snackBar: MatSnackBar, private cityService: CityService) {\n    this.fg = fb.group({\n      code: ['', Validators.required],\n      name: ['', Validators.required],\n      mobile: [''],\n      land: [''],\n      email: [''],\n      notes: [''],\n      status: [''],\n\n      city: ['', Validators.required],\n      neighborhood: [''],\n      street: [''],\n      number: [''],\n      complement: [''],\n      zip_code: [''],\n    \n      contact_name: [''],\n      contact_email: [''],\n      contact_mobile: [''],\n      contact_role: [''],\n      contact_notes: ['']\n    });\n  }\n\n  ngOnInit() {\n    this.cityService.get().subscribe((cities: City[]) => this.cities = cities);\n    this.route.params.subscribe(p => {\n      this.service.getById(p.id).subscribe(org => {\n        this.org = org;\n        this.fillForm();\n      })\n    });\n  }\n\n  fillForm() {\n    this.fg.controls.code.setValue(this.org.code);\n    this.fg.controls.name.setValue(this.org.name);\n\n    this.fg.controls.code.setValue(this.org.code)\n    this.fg.controls.name.setValue(this.org.name)\n    this.fg.controls.mobile.setValue(this.org.mobile)\n    this.fg.controls.land.setValue(this.org.land)\n    this.fg.controls.email.setValue(this.org.email)\n    this.fg.controls.notes.setValue(this.org.notes)\n    this.fg.controls.status.setValue(this.org.status)\n\n    this.fg.controls.city.setValue(this.org.address.city)\n    this.fg.controls.neighborhood.setValue(this.org.address.neighborhood)\n    this.fg.controls.street.setValue(this.org.address.street)\n    this.fg.controls.number.setValue(this.org.address.number)\n    this.fg.controls.complement.setValue(this.org.address.complement)\n    this.fg.controls.zip_code.setValue(this.org.address.zip_code)\n  \n    this.fg.controls.contact_name.setValue(this.org.contact.name)\n    this.fg.controls.contact_email.setValue(this.org.contact.email)\n    this.fg.controls.contact_mobile.setValue(this.org.contact.mobile)\n    this.fg.controls.contact_role.setValue(this.org.contact.role)\n    this.fg.controls.contact_notes.setValue(this.org.contact.notes)\n  }\n\n  update() {\n    let org: Org = new Org();\n    org._id       = this.org._id;\n    org.code      = this.fg.controls.code.value;\n    org.name      = this.fg.controls.name.value;\n    org.mobile    = this.fg.controls.mobile.value;\n    org.land      = this.fg.controls.land.value;\n    org.email     = this.fg.controls.email.value;\n    org.notes     = this.fg.controls.notes.value;\n    org.status    = this.fg.controls.status.value;\n\n    org.address.state         = 'BA';\n    org.address.city          = this.fg.controls.city.value;\n    org.address.neighborhood  = this.fg.controls.neighborhood.value;\n    org.address.street        = this.fg.controls.street.value;\n    org.address.number        = this.fg.controls.number.value;\n    org.address.complement    = this.fg.controls.complement.value;\n    org.address.zip_code      = this.fg.controls.zip_code.value;\n  \n    org.contact.name    = this.fg.controls.contact_name.value;\n    org.contact.email   = this.fg.controls.contact_email.value;\n    org.contact.mobile  = this.fg.controls.contact_mobile.value;\n    org.contact.role    = this.fg.controls.contact_role.value;\n    org.contact.notes   = this.fg.controls.contact_notes.value;\n\n    this.service.update(org).subscribe((res) => {\n      this.snackBar.open('Organização atualizada com sucesso!', null, {duration: 2000});\n      this.router.navigate([`/orgs`]);\n    });\n  }\n\n  cancel() {\n    this.router.navigate(['/orgs']);\n  }\n\n}\n","import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator, MatSort } from '@angular/material';\nimport { map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge } from 'rxjs';\nimport { Org } from \"../../models\";\n\n/**\n * Data source for the OrgsTable view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\nexport class ListOrgsDataSource extends DataSource<Org> {\n  data: Org[] = [];\n\n  constructor(private paginator: MatPaginator, private sort: MatSort, private _data: Org[]) {\n    super();\n    this.data = _data;\n  }\n\n  /**\n   * Connect this data source to the table. The table will only update when\n   * the returned stream emits new items.\n   * @returns A stream of the items to be rendered.\n   */\n  connect(): Observable<Org[]> {\n    // Combine everything that affects the rendered data into one update\n    // stream for the data-table to consume.\n    const dataMutations = [\n      observableOf(this.data),\n      this.paginator.page,\n      this.sort.sortChange\n    ];\n\n    // Set the paginator's length\n    this.paginator.length = this.data.length;\n\n    return merge(...dataMutations).pipe(map(() => {\n      return this.getPagedData(this.getSortedData([...this.data]));\n    }));\n  }\n\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect() {}\n\n  /**\n   * Paginate the data (client-side). If you're using server-side pagination,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getPagedData(data: Org[]) {\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n    return data.splice(startIndex, this.paginator.pageSize);\n  }\n\n  /**\n   * Sort the data (client-side). If you're using server-side sorting,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getSortedData(data: Org[]) {\n    if (!this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort.direction === 'asc';\n      switch (this.sort.active) {\n        case 'name': return compare(a.name, b.name, isAsc);\n        case 'code': return compare(a.code, b.code, isAsc);\n        default: return 0;\n      }\n    });\n  }\n}\n\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\nfunction compare(a, b, isAsc) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","module.exports = \"<div class=\\\"mat-elevation-z8\\\">\\n  <table mat-table class=\\\"full-width-table\\\" [dataSource]=\\\"dataSource\\\" matSort aria-label=\\\"Elements\\\">\\n\\n    <!-- name Column -->\\n    <ng-container matColumnDef=\\\"name\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Nome</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\">{{row.name}}</td>\\n    </ng-container>\\n\\n    <!-- city Column -->\\n    <ng-container matColumnDef=\\\"city\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Cidade</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\">{{row.address.city}}</td>\\n    </ng-container>\\n\\n    <!-- mobile Column -->\\n    <ng-container matColumnDef=\\\"mobile\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Celular</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\">{{row.mobile}}</td>\\n    </ng-container>\\n\\n    <!-- status Column -->\\n    <ng-container matColumnDef=\\\"status\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Status</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\">{{row.status ? 'Ativo' : 'Inativo'}}</td>\\n    </ng-container>\\n\\n    <!-- Actions Column -->  \\n    <ng-container matColumnDef=\\\"actions\\\">\\n      <th mat-header-cell *matHeaderCellDef></th>\\n      <td mat-cell *matCellDef=\\\"let row\\\">\\n        <button mat-icon-button (click)=\\\"edit(row._id)\\\">\\n          <mat-icon aria-label=\\\"Edit\\\">edit</mat-icon>\\n        </button>\\n        <button mat-icon-button (click)=\\\"delete(row._id, row.title)\\\">\\n          <mat-icon aria-label=\\\"Delete\\\">delete</mat-icon>\\n        </button>\\n      </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n  </table>\\n\\n  <mat-paginator #paginator\\n      [length]=\\\"dataSource?.data.length\\\"\\n      [pageIndex]=\\\"0\\\"\\n      [pageSize]=\\\"50\\\"\\n      [pageSizeOptions]=\\\"[25, 50, 100, 250]\\\">\\n  </mat-paginator>\\n</div>\\n\\n<div class=\\\"fab\\\">\\n  <button mat-icon-button (click)=\\\"add()\\\">\\n    <mat-icon aria-label=\\\"Add\\\">add</mat-icon>\\n  </button>\\n</div>\\n\\n\"","module.exports = \".full-width-table {\\n  width: 100%; }\\n\\ndiv.fab {\\n  color: #FFF;\\n  position: fixed;\\n  right: 36px;\\n  top: 12px;\\n  z-index: 2; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2ZlcnJlaXJhdGkvcHJvamVjdHMvc3VsYmFndWlhL2FuZ3VsYXItYWRtaW4vc3JjL2FwcC9vcmdzL2xpc3Qtb3Jncy9saXN0LW9yZ3MuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFXLEVBQ1o7O0FBRUQ7RUFDRSxZQUFXO0VBQ1gsZ0JBQWU7RUFDZixZQUFXO0VBQ1gsVUFBUztFQUNULFdBQVUsRUFDWCIsImZpbGUiOiJzcmMvYXBwL29yZ3MvbGlzdC1vcmdzL2xpc3Qtb3Jncy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mdWxsLXdpZHRoLXRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbmRpdi5mYWIge1xuICBjb2xvcjogI0ZGRjtcbiAgcG9zaXRpb246IGZpeGVkO1xuICByaWdodDogMzZweDtcbiAgdG9wOiAxMnB4O1xuICB6LWluZGV4OiAyO1xufSJdfQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator, MatSort, MatDialog, MatTable, MatSnackBar } from '@angular/material';\nimport { ListOrgsDataSource } from './list-orgs-datasource';\nimport { OrgService } from '../org.service';\nimport { Router } from '@angular/router';\nimport { Org } from \"../../models\";\nimport { DialogConfirm } from '../../angular-material-components/dialog-confirm.component';\n\n\n@Component({\n  selector: 'app-list-orgs',\n  templateUrl: './list-orgs.component.html',\n  styleUrls: ['./list-orgs.component.scss'],\n})\nexport class ListOrgsComponent implements OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatTable) table: MatTable<any>;\n  dataSource: ListOrgsDataSource;\n\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = ['name', 'city', 'mobile', 'status', 'actions'];\n\n  constructor(private service: OrgService, private router: Router, public dialog: MatDialog, public snackBar: MatSnackBar) {}\n\n  ngOnInit() { this.getOrgs() }\n\n  getOrgs() {\n    this.service.get().subscribe((data: Org[]) => {\n      this.dataSource = new ListOrgsDataSource(this.paginator, this.sort, data);\n    });\n  }\n\n  edit(id) { this.router.navigate([`/orgs/edit/${id}`])}\n  add() { this.router.navigate([`/orgs/add`])}\n\n  delete(id, title) {\n    const dialogRef = this.dialog.open(DialogConfirm, {width: '320px', data: {title: title}});\n    dialogRef.afterClosed().subscribe(result => {\n      if(result) {\n        this.service.delete(id).subscribe(() => this.getOrgs());\n        this.snackBar.open('Organização removida.', null, {duration: 2000});\n      }\n    });\n  }\n\n  // filter(s: string) {\n  //   this.dataSource.filter = s.trim().toLowerCase();\n  // }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrgService {\n\n  // TODO: Config environment variables\n  host = 'http://localhost:8080';\n  url = this.host + '/api/orgs';\n\n  constructor(private http: HttpClient) { }\n  \n  get() {\n    return this.http.get(this.url);\n  }\n  \n  getById(id) {\n    return this.http.get(`${this.url}/${id}`);\n  }\n  \n  update(data) {\n    return this.http.put(`${this.url}/${data._id}`, data);\n  }\n  \n  add(data) {\n    return this.http.post(this.url, data);\n  }\n  \n  delete(id) {\n    return this.http.delete(`${this.url}/${id}`);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}